import telebot
import requests
from telebot import types

TELEGRAM_BOT_TOKEN = '7391521133:AAF6J1pZpU3fKWwLsqClrG-IZSPhz5sRQBo'
WEATHER_API_KEY = 'e056d51cce274e96a54151152253004'

bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

def get_weather(city):
    try:
        url = f'http://api.weatherapi.com/v1/current.json?key={WEATHER_API_KEY}&q={city}&aqi=no'
        response = requests.get(url)
        data = response.json()

        if 'error' in data:
            return f"–û—à–∏–±–∫–∞: {data['error']['message']}"

        location = data['location']['name']
        country = data['location']['country']
        current = data['current']
        weather_desc = current['condition']['text']
        temp = current['temp_c']
        humidity = current['humidity']
        wind_speed = current['wind_kph']
        weather_report = (
            f'–ü–æ–≥–æ–¥–∞ –≤ {location}, {country}:\n'
            f'{weather_desc}\n'
            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n'
            f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n'
            f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –∫–º/—á\n'
        )
        return weather_report
    except requests.exceptions.RequestException:
        return '–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.'

def get_forecast(city, days=3):
    try:
        url = f'http://api.weatherapi.com/v1/forecast.json?key={WEATHER_API_KEY}&q={city}&days={days}&aqi=no'
        response = requests.get(url)
        data = response.json()

        if 'error' in data:
            return f"–û—à–∏–±–∫–∞: {data['error']['message']}"

        location = data['location']['name']
        country = data['location']['country']
        forecast = data['forecast']['forecastday']
        forecast_report = f'–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ {days} –¥–Ω—è(–µ–π) –≤ {location}, {country}:\n'

        for day in forecast:
            date = day['date']
            condition = day['day']['condition']['text']
            temp_min = day['day']['mintemp_c']
            temp_max = day['day']['maxtemp_c']
            forecast_report += (
                f'\nüìÖ {date}:\n'
                f'{condition}\n'
                f'–ú–∏–Ω: {temp_min}¬∞C, –ú–∞–∫—Å: {temp_max}¬∞C\n'
            )
        return forecast_report
    except requests.exceptions.RequestException:
        return '–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑.'

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    cities = ["New York", "Almaty", "Rome", "Dubai", "–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥", "/forecast"]
    for city in cities:
        markup.add(types.KeyboardButton(city))
    bot.send_message(message.chat.id, 'Hi! I am bot for the weather, type to me city and I send you weather at the moment)', reply_markup=markup)

@bot.message_handler(commands=['forecast'])
def ask_forecast_city(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è:")
    bot.register_next_step_handler(message, send_forecast)

def send_forecast(message):
    city = message.text.strip()
    forecast = get_forecast(city)
    bot.send_message(message.chat.id, forecast)

@bot.message_handler(func=lambda message: message.text in ["New York", "Almaty", "Rome", "Dubai"])
def send_weather_by_button(message):
    city = message.text
    weather_report = get_weather(city)
    bot.send_message(message.chat.id, weather_report)

@bot.message_handler(func=lambda message: message.text == "–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥")
def ask_for_city(message):
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:")
    bot.register_next_step_handler(message, handle_city_input)

def handle_city_input(message):
    city = message.text.strip()
    weather_report = get_weather(city)
    bot.send_message(message.chat.id, weather_report)

@bot.message_handler(func=lambda message: True)
def send_weather(message):
    city = message.text.strip()
    weather_report = get_weather(city)
    bot.reply_to(message, weather_report)

bot.polling()